// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApi.Database;

#nullable disable

namespace SchoolApi.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    partial class SchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("SchoolApi.Entities.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Cutting trees, the ins and outs"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "CSS and you - a love story"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Baking mud cakes using actual mud"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Christmas eve - myth or reality?"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "LEGO colors through time"
                        });
                });

            modelBuilder.Entity("SchoolApi.Entities.CourseParticipant", b =>
                {
                    b.Property<long>("CourseId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ParticipantId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("CourseId", "ParticipantId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("CourseParticipants");
                });

            modelBuilder.Entity("SchoolApi.Entities.CourseSchedule", b =>
                {
                    b.Property<long>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId", "Date");

                    b.ToTable("CourseSchedules");

                    b.HasData(
                        new
                        {
                            CourseId = 1L,
                            Date = new DateOnly(2017, 1, 1)
                        },
                        new
                        {
                            CourseId = 1L,
                            Date = new DateOnly(2017, 10, 31)
                        },
                        new
                        {
                            CourseId = 2L,
                            Date = new DateOnly(2017, 5, 25)
                        },
                        new
                        {
                            CourseId = 2L,
                            Date = new DateOnly(2017, 5, 26)
                        },
                        new
                        {
                            CourseId = 2L,
                            Date = new DateOnly(2017, 5, 27)
                        },
                        new
                        {
                            CourseId = 3L,
                            Date = new DateOnly(2017, 1, 1)
                        },
                        new
                        {
                            CourseId = 3L,
                            Date = new DateOnly(2018, 12, 10)
                        },
                        new
                        {
                            CourseId = 3L,
                            Date = new DateOnly(2017, 4, 1)
                        },
                        new
                        {
                            CourseId = 3L,
                            Date = new DateOnly(2019, 3, 12)
                        },
                        new
                        {
                            CourseId = 4L,
                            Date = new DateOnly(2017, 12, 24)
                        },
                        new
                        {
                            CourseId = 4L,
                            Date = new DateOnly(2018, 12, 24)
                        },
                        new
                        {
                            CourseId = 4L,
                            Date = new DateOnly(2019, 12, 24)
                        },
                        new
                        {
                            CourseId = 5L,
                            Date = new DateOnly(2017, 6, 30)
                        });
                });

            modelBuilder.Entity("SchoolApi.Entities.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Participant");
                });

            modelBuilder.Entity("SchoolApi.Entities.CourseParticipant", b =>
                {
                    b.HasOne("SchoolApi.Entities.Course", "Course")
                        .WithMany("CourseParticipants")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolApi.Entities.Participant", "Participant")
                        .WithMany("CourseParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("SchoolApi.Entities.CourseSchedule", b =>
                {
                    b.HasOne("SchoolApi.Entities.Course", "Course")
                        .WithMany("CourseSchedules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("SchoolApi.Entities.Course", b =>
                {
                    b.Navigation("CourseParticipants");

                    b.Navigation("CourseSchedules");
                });

            modelBuilder.Entity("SchoolApi.Entities.Participant", b =>
                {
                    b.Navigation("CourseParticipants");
                });
#pragma warning restore 612, 618
        }
    }
}
